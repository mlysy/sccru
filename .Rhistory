bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
warnings
warnings()
install.packages("styler")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
styler::style_file("P2_nonparametric.Rmd")
styler::style_file("P1_questionnaire_design.Rmd")
styler::style_file("A1_general_guidelines.Rmd")
styler::style_file("A2_formmating_guidelines.Rmd")
styler::style_file("A2_formatting_guidelines.Rmd")
styler::style_file("A3_git_tutorial.Rmd")
styler::style_file("index.Rmd")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library("wooldridge") #load the package wooldridge
data("econmath") #load the data econmath
str(econmath) #structure of the data set
head(econmath) #preview of the data set
econ <- econ[complete.cases(econmath),]
econ <- ecomath[complete.cases(econmath),]
econ <- econmath[complete.cases(econmath),]
?factor
econ$male <- factor(econ$male)
econ$econhs <- factor(econ$econhs)
econ$calculus <- factor(econ$calculus)
econ$fathcoll <- factor(econ$fathcoll)
econ$mothcoll <- factor(econ$mothcoll)
econ$att <- econ$attgood
econ$att[econ$attexc == 1] <- 2
econ$att <- factor(econ$att)
View(econ)
econ$att <- econ$attgood
econ$att[econ$attexc == 1] <- 2
econ$att <- factor(econ$att)
econ <- econ[,-c(13, 14)] #remove the attgood and attexc column
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library("wooldridge") #load the package wooldridge
data("econmath") #load the data econmath
str(econmath) #structure of the data set
head(econmath) #preview of the data set
econ <- econmath[complete.cases(econmath),]
econ$male <- factor(econ$male)
econ$econhs <- factor(econ$econhs)
econ$calculus <- factor(econ$calculus)
econ$fathcoll <- factor(econ$fathcoll)
econ$mothcoll <- factor(econ$mothcoll)
econ$att <- econ$attgood
econ$att[econ$attexc == 1] <- 2
econ$att <- factor(econ$att)
econ <- econ[,-c(13, 14)] #remove the attgood and attexc column
econ$mathscr <- factor(econ$male, ordered = TRUE)
str(econ)
library("wooldridge") #load the package wooldridge
data("econmath") #load the data econmath
str(econmath) #structure of the data set
head(econmath) #preview of the data set
econ <- econmath[complete.cases(econmath),]
econ$male <- factor(econ$male)
econ$econhs <- factor(econ$econhs)
econ$calculus <- factor(econ$calculus)
econ$fathcoll <- factor(econ$fathcoll)
econ$mothcoll <- factor(econ$mothcoll)
econ$att <- econ$attgood
econ$att[econ$attexc == 1] <- 2
econ$att <- factor(econ$att)
econ <- econ[,-c(13, 14)] #remove the attgood and attexc column
econ$mathscr <- factor(econ$mathscr, ordered = TRUE)
str(econ)
#load the required packages
library(corrplot)
install.packages(corrplot)
install.packages("corrplot")
install.packages("caret")
install.packages("glmnet")
#load the required packages
library(corrplot)
library(caret)
library(glmnet)
slm <- lm(score ~ colgpa, data = econ)
summary(slm)
slm$coefficients
summary(slm)
?confint
confint(slm, level = 0.95)
plot(slm)
plot.lm
?plot.lm
plot(slm, which = c(1,2))
?plot.lm
plot(slm, which = c(1,2), ask = FALSE)
par(mfrow = c(1,2))
plot(slm, which = c(1,2), ask = FALSE)
plot(slm, which = 6)
plot(slm, which = 1)
?plot.lm
mln1 <- lm(score~colgpa+calculus, data = econ)
mln1 <- lm(score~colgpa+calculus, data = econ)
summary(mln1)
mln2 <- lm(score~colgpa*calculus, data = econ)
summary(mln2)
mln1 <- lm(score~colgpa+hsgpa, data = econ)
summary(mln1)
mln3 <- lm(score~colgpa*calculus, data = econ)
summary(mln3)
summary(slm)
#load the required packages
library(corrplot)
library(caret)
library(glmnet)
library(lmtest)
lrtest(mln3, slm)
lrtest(slm, mln3)
?glmnet
?step
?studres
studres(mln1)
residuals(slm)
# we can first create a perfect linear model as a contrast
x0 <- rnorm(n) # predictors
n <- nrow(econ)
x <- econ$colgpa
y <- econ$score
# we can first create a perfect linear model as a contrast
x0 <- rnorm(n) # predictors
eps <- rnorm(n) # errors
y0 <- 1 + x0 + eps
plm <- lm(y0 ~ x0)
plot(x, y, pch = 16, cex = .7, xlab = "x", ylab = "y", main = "Simple Linear Model")
abline(slm, col = "red")
plot(x0, y0, pch = 16, cex = .7, xlab = "x", ylab = "y", main = "Perfect Linear Model")
abline(plm, col = "red")
par(mfrow = c(1,2)) #two plots side-by-side in a row
plot(slm, which = c(1,2), ask = FALSE)
# residuals vs fitted values
model <- Mstep
# residuals vs fitted values
model <- mln3
res <- residuals(model)
res.stu <- studres(model)
library(MASS)
# residuals vs fitted values
model <- mln3
res <- residuals(model)
res.stu <- studres(model)
cex <- .8 # controls the size of the points and labels
par(mar = c(4,4,.1,.1))
plot(predict(model), res, pch = 21, bg = "black", cex = .8, cex.axis = .8,
xlab = "Fitted Values", ylab = "Residuals")
points(predict(model), res.stu, pch = 21, bg = "red", cex = cex)
legend(x = "topright", c("Residuals", "Studentized Residuals"),
pch = 21, pt.bg = c("black", "red"), pt.cex = cex, cex = cex)
?glmnet
help(caret)
?caret
par(mfrow = c(1,2))
plot(Mstep, which = c(1,2), ask = FALSE)
VIF <- diag(solve(cor(X[,-1])))
# bounds for model selection
M0 <- lm(score ~ 1, data = econ) # minimal model: intercept only
# maximal model: all main effects and all interaction effects except with career
Mfull <- lm(score ~ (. - acteng - actmth)^2, data = econ)
# stepwise selection
Mstart <- lm(score ~ . - acteng - actmth, data = econ)
Mstep <- step(object = Mstart, scope = list(lower = M0, upper = Mfull), direction = "both", trace = FALSE)
summary(Mstep)
#Linear relationships among variables
pairs(~ age + work + study + colgpa + hsgpa + acteng + actmth + act + score, data = econ)
par(mfrow = c(1,2))
plot(Mstep, which = c(1,2), ask = FALSE)
X <- model.matrix(Mstep)
VIF <- diag(solve(cor(X[,-1])))
sqrt(VIF)
?plot.lm
plot(slm)
plot(slm, which = 4)
plot(slm, which = 6)
plot(slm, which = 5)
plot(slm, which = 3)
plot(slm, which = 5)
plot(slm, which = 6)
plot(slm, which = 5)
plot(slm, which = 4)
plot(slm, which = 5)
par(mfrow = c(1,2))
plot(Mstep, which (4,5))
par(mfrow = c(1,2))
plot(Mstep, which = c(4,5), ask = FALSE)
plot(Mstep)
boxcox(R)
boxcox(Mstep)
tmp <- boxcox(Mstep)
which.max(tmp)
which.max(tmp$y)
tmp$x[which.max(tmp$y)]
Mstep
mln4 <- lm(score^1.9 ~ age + work + study + econhs + colgpa + hsgpa +
act + male + calculus + mothcoll + age:study + econhs:hsgpa +
study:act + age:calculus + hsgpa:mothcoll + econhs:male +
colgpa:male + male:calculus + work:act + act:calculus + hsgpa:act,
data = econ)
par(mfrow = c(1,2))
plot(mln4, which = c(1,2), ask = FALSE)
plot(mln4, which = c(1,2), ask = FALSE)
plot(mln4, which = c(1), ask = FALSE)
plot(Mstep, which = c(1), ask = FALSE)
mln4 <- lm(score^1.9 ~ age + work + study + econhs + colgpa + hsgpa +
act + male + calculus + mothcoll + age:study + econhs:hsgpa +
study:act + age:calculus + hsgpa:mothcoll + econhs:male +
colgpa:male + male:calculus + work:act + act:calculus + hsgpa:act,
data = econ)
summary(mln4)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
styler::style_file("P3_linear_regression.Rmd")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
